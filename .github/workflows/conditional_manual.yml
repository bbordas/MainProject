# This is a basic workflow to help you get started with Actions

name: Conditional Manual

on:
  push:
    branches:
      - '**'
        
  workflow_dispatch:
    inputs:
      projectName:
        description: 'Project name'     
        required: true
        default: 'project1'
      environment:
        description: 'environment'     
        required: true
        default: 'dev'
        
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      
#     - name: Get Git Version
#       uses: docker://gittools/gitversion:5.0.2-beta1-27-linux-centos-7-netcoreapp2.2
#       with:
#         args: /github/workspace /nofetch /exec /bin/sh /execargs "-c \"echo $GitVersion_ShortSha > /github/workspace/version.txt\""
        
#     - uses: pCYSl5EDgo/cat@master
#       id: hello
#       with:
#         path: /home/runner/work/MainProject/MainProject/version.txt
        
    - uses: dorny/paths-filter@v2
      if: steps.check.outcome == 'failure' || steps.check.outcome == 'success'
      id: filter
      with:
        filters: |
          project1:
            - 'projects/project1/**'
          project2:
            - 'projects/project2/**'
          project3:
            - 'projects/project3/**'
      
    - name: Set env variables
      shell: bash
      run: |
        if steps.filter.outputs.project1 == true
        then
          export ENV='dev' 
          export PROJECT='project1'
        elif steps.filter.outputs.project2 == true
        then
          export ENV='dev' 
          export PROJECT='project2'
        elif steps.filter.outputs.project3 == true
        then
          export ENV='dev' 
          export PROJECT='project3'
        else
          export PROJECT='project1'
          export ENV='dev'
        fi




    - name: print out variables
      run: |
        echo $PROJECT
        echo $ENV
        
  
#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v1
      
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Login to DockerHub
#       uses: docker/login-action@v1 
#       with:
#         username: ${{ secrets.DOCKERHUB_USER }}
#         password: ${{ secrets.DOCKERHUB_PASS }}
