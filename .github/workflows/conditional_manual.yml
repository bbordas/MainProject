# This is a basic workflow to help you get started with Actions

name: Conditional Manual

on:
  push:
    branches:
      - master
        
  workflow_dispatch:
    inputs:
      projectName:
        description: 'Project name (project1 | project2 | project3)'     
        required: true
        default: 'project1' 
      environment:
        description: 'environment'     
        required: true
        default: 'dev'
        
jobs:
  build:
    strategy:
      matrix:
        # you need as many options for run as many projects you have
          deploy: [project1, project2, project3, manual]
      
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
   
    - name: Identify by path which project has to be built
      uses: dorny/paths-filter@v2
      continue-on-error: true
      id: filter
      with:
        filters: |
          shared: &shared
            - package.json
            - tsconfig.json
          project1:
            - *shared
            - 'projects/project1/**'
          project2:
            - *shared
            - 'projects/project2/**'
          project3:
            - *shared
            - 'projects/project3/**'
      
    - name: Write default version and environment into github environmet variables
      run: |
        echo "ENV=dev" >> $GITHUB_ENV
        echo "PROJECT_NAME=null" >> $GITHUB_ENV
        echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
    - name: Set PROJECT_NAME for project1
      if: steps.filter.outputs.project1 == 'true' && matrix.deploy == 'project1' 
      run: |
        echo in set project1
        echo "PROJECT_NAME=project1" >> $GITHUB_ENV
        
    - name: Set PROJECT_NAME for project2
      if: steps.filter.outputs.project2 == 'true' && matrix.deploy == 'project2'
      run: echo "PROJECT_NAME=project2" >> $GITHUB_ENV
        
    - name: Set PROJECT_NAME for project3 
      if: steps.filter.outputs.project3 == 'true' && matrix.deploy == 'project3'
      run: echo "PROJECT_NAME=project3" >> $GITHUB_ENV
        
    - name: Set PROJECT_NAME from input
      if: github.event_name == 'workflow_dispatch' && matrix.deploy == 'manual'
      run: |
        echo "PROJECT_NAME=${{ github.event.inputs.projectName }}" >> $GITHUB_ENV
        echo "ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
        
    - name: Set output from $PROJECT_NAME to be able to use in condition
      id: check
      run: echo ::set-output name=project::$PROJECT_NAME
 
#     - name: Login to DockerHub
#       if: steps.check.outputs.project != 'null'
#       uses: docker/login-action@v1 
#       with:
#         username: ${{ secrets.DOCKERHUB_USER }}
#         password: ${{ secrets.DOCKERHUB_PASS }}
        
#     - name: Build Docker image
#       if: steps.check.outputs.project != 'null'
#       run: | 
#         docker build --no-cache --file Dockerfile \
#         --tag bbordas/mainproject_$PROJECT_NAME:latest \
#         --tag bbordas/mainproject_$PROJECT_NAME:$VERSION \
#         --build-arg PROJECT_NAME=$PROJECT_NAME .
 
#     - name: Push to Docker Hub
#       if: steps.check.outputs.project != 'null'
#       run: | 
#         docker push bbordas/mainproject_$PROJECT_NAME:latest
#         docker push bbordas/mainproject_$PROJECT_NAME:$VERSION
        
    - uses: actions/checkout@v2
        
    - name: Git Tag
      continue-on-error: true
      if: steps.check.outputs.project != 'null'
      run: | 
          git config user.email "bogi.t.bordas@gmail.com"
          git config user.name "bbordas"
          git tag ${{ env.VERSION }}-stable && git push --tags
        

          
